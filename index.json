[{"content":" 标题1 # 标题2 # 标题3 # 标题4 # 标题5 # 标题6 # 文字样式 # 粗体文字\n斜体文字\n粗斜体文字\n删除线文字\n下划线文字\n行内代码\n超链接\nhttps://example.com\n邮箱地址：example@example.com\n列表 # 无序列表 # 项目1 项目2 子项目1 子项目2 三级子项目 有序列表 # 第一项 第二项 子项 子项 第三项 任务列表 # 已完成任务 未完成任务 引用 # 这是一个引用块。\n可以有多行内容。\n嵌套引用\n代码块 # def hello_world(): print(\u0026#34;Hello, World!\u0026#34;) console.log(\u0026#34;Hello, World!\u0026#34;); 表格 # 左对齐 居中对齐 右对齐 单元格 单元格 单元格 长文本单元格 短 12345 分隔线 # 图片 # 标题 HTML元素 # 点击展开 这里是隐藏的内容。 这是红色的HTML div内容。 数学公式（LaTeX） # 行内公式：$E=mc^2$\n块级公式： $$ \\sum_{i=1}^{n} i = \\frac{n(n+1)}{2} $$\n脚注 # 这是一个带有脚注的句子。 这是脚注的内容。\n表情符号 # \u0026#x1f604; \u0026#x2764;\u0026#xfe0f; \u0026#x1f680;\n特殊字符 # © ™ ®\n定义列表 # 术语1 定义1 术语2 定义2 另一个定义 视频嵌入 # Youtube bilibili 这个文档包含了Markdown的大部分常用语法，包括：\n各级标题 文字样式（粗体、斜体、删除线等） 各种列表（无序、有序、任务列表） 引用块 代码块（行内和块级） 表格 分隔线 图片 HTML元素 数学公式 脚注 表情符号 特殊字符 定义列表 视频嵌入 自定义短代码 ","date":"2025-04-09","externalUrl":null,"permalink":"/post/all-style-test/","section":"Posts","summary":"","title":"All Style Test","type":"post"},{"content":" 为什么选择 Hugo + GitHub 来部署个人博客 # 在当今的互联网时代，个人博客已经成为分享知识和经验的重要平台。选择合适的工具和平台来搭建博客是每个博主都需要考虑的问题。以下是我选择 Hugo 和 GitHub 的几个原因。\n1. 高效的静态网站生成器 # Hugo 是一个非常快速的静态网站生成器，它使用 Go 语言编写，能够在几秒钟内生成数百个页面。这种高效性使得我可以专注于内容创作，而不必担心网站的加载速度。\n2. 简单的部署流程 # 使用 GitHub Pages 部署博客非常简单。只需将生成的静态文件推送到 GitHub 仓库的 gh-pages 分支，GitHub 就会自动为我提供一个可访问的博客地址。这种无缝的集成大大简化了部署流程。\n3. 版本控制与协作 # 通过 GitHub，我可以轻松地管理博客的版本，记录每次修改的历史。这不仅方便了我个人的回顾，也为未来可能的协作提供了便利。\n4. 丰富的主题和插件 # Hugo 拥有丰富的主题和插件生态系统，可以帮助我快速定制博客的外观和功能。我可以根据自己的需求选择合适的主题，甚至可以自己开发主题来实现个性化的设计。\n5. 社区支持 # Hugo 和 GitHub 都有活跃的社区支持，遇到问题时可以很容易找到解决方案或获取帮助。这种社区的力量让我在搭建和维护博客的过程中感到更加安心。\n结论 # 综上所述，Hugo 和 GitHub 的结合为我提供了一个高效、简单且灵活的博客搭建方案。无论是对于新手还是有经验的博主，这种方式都值得推荐。\n","date":"2025-04-09","externalUrl":null,"permalink":"/post/why-hugo+github/","section":"Posts","summary":"","title":"Why hugo+github","type":"post"},{"content":" Hugo Content 结构详解 # 1. 目录结构 # Hugo的内容组织非常清晰，主要遵循以下结构：\ncontent/ ├── _index.md # 首页内容 ├── about.md # 关于页面 ├── post/ # 博客文章目录 │ ├── _index.md # 文章列表页 │ ├── first-post.md # 具体文章 │ └── second-post.md └── projects/ # 项目展示目录 ├── _index.md # 项目列表页 └── project1.md # 具体项目 2. 文章格式 # 每篇文章都包含两个部分：\nFront Matter（前置元数据） 正文内容 2.1 Front Matter 详解 # Front Matter 是文章开头的元数据部分，用 +++ 或 --- 包裹。常用字段包括：\n+++ title = \u0026#34;文章标题\u0026#34; date = \u0026#34;2025-04-09\u0026#34; description = \u0026#34;文章描述\u0026#34; tags = [\u0026#34;标签1\u0026#34;, \u0026#34;标签2\u0026#34;] categories = [\u0026#34;分类1\u0026#34;] draft = false +++ 2.2 正文内容 # 正文部分支持 Markdown 格式，可以包含：\n标题（# 一级标题） 列表 代码块 图片 表格 链接 3. 与 hugo.toml 的关联 # hugo.toml 是网站的配置文件，它定义了：\n网站的基本信息 主题设置 内容目录结构 分页设置 菜单配置 例如：\nbaseURL = \u0026#34;https://example.com\u0026#34; title = \u0026#34;我的博客\u0026#34; theme = \u0026#34;my-theme\u0026#34; [params] description = \u0026#34;网站描述\u0026#34; author = \u0026#34;作者名\u0026#34; [menu] [[menu.main]] name = \u0026#34;首页\u0026#34; url = \u0026#34;/\u0026#34; weight = 1 4. 最佳实践 # 文件命名：\n使用小写字母 用连字符（-）分隔单词 避免使用空格和特殊字符 内容组织：\n按主题分类存放 使用子目录管理相关文章 保持目录结构清晰 Front Matter：\n必填字段：title, date 建议添加：description, tags 可选字段：categories, draft 图片管理：\n建议将图片放在 static 目录 使用相对路径引用 优化图片大小 5. 常见问题 # 文章不显示：\n检查 draft 是否为 false 确认文件在正确的目录 检查文件名格式 图片不显示：\n确认图片路径正确 检查图片是否在 static 目录 验证图片文件名格式 分类不生效：\n检查 categories 字段格式 确认 hugo.toml 中的分类配置 6. 总结 # Hugo 的内容管理非常灵活，通过合理的目录结构和规范的 Front Matter，可以轻松管理大量内容。记住：\n保持结构清晰 遵循命名规范 善用分类和标签 定期备份内容 希望这篇文章能帮助你更好地理解和使用 Hugo 的内容管理系统！\n","date":"2025-04-09","externalUrl":null,"permalink":"/post/hugo-content-explain/","section":"Posts","summary":"","title":"Explain Hugo-conten in One post","type":"post"},{"content":" Manim的基础使用 # 如何创建一个scene类 # ","date":"2025-04-09","externalUrl":null,"permalink":"/post/manim/basic-use/","section":"Posts","summary":"","title":"Manim Basic Use","type":"post"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/","section":"","summary":"","title":"","type":"page"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/tags/animation/","section":"Tags","summary":"","title":"Animation","type":"tags"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/tags/blog/","section":"Tags","summary":"","title":"Blog","type":"tags"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/tags/css/","section":"Tags","summary":"","title":"Css","type":"tags"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/tags/github/","section":"Tags","summary":"","title":"Github","type":"tags"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/tags/html/","section":"Tags","summary":"","title":"Html","type":"tags"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/tags/hugo/","section":"Tags","summary":"","title":"Hugo","type":"tags"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/tags/index/","section":"Tags","summary":"","title":"Index","type":"tags"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/tags/js/","section":"Tags","summary":"","title":"Js","type":"tags"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/categories/manim/","section":"Categories","summary":"","title":"Manim","type":"categories"},{"content":"本节包含了我的manim教程\n","date":"2025-04-09","externalUrl":null,"permalink":"/post/manim/","section":"Posts","summary":"","title":"Manim","type":"post"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/series/manim/","section":"Series","summary":"","title":"Manim","type":"series"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/tags/manim/","section":"Tags","summary":"","title":"Manim","type":"tags"},{"content":" Manim And Manimgl # Manim is a package created by 3Blue1Brown.\nWe can use it to create some fluent and awesome animation by python coding.\nThere are two main versions,Manim(Community),Manimgl(base on opengl).\n比较两者 This series is for manimgl. Install # ","date":"2025-04-09","externalUrl":null,"permalink":"/post/manim/quick-start/","section":"Posts","summary":"","title":"Manim Quick Start","type":"post"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/tags/markdown/","section":"Tags","summary":"","title":"Markdown","type":"tags"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/tags/math/","section":"Tags","summary":"","title":"Math","type":"tags"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/tags/post/","section":"Tags","summary":"","title":"Post","type":"tags"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/post/","section":"Posts","summary":"","title":"Posts","type":"post"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/tags/shortcodes/","section":"Tags","summary":"","title":"Shortcodes","type":"tags"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"2025-04-09","externalUrl":null,"permalink":"/tags/visualization/","section":"Tags","summary":"","title":"Visualization","type":"tags"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"}]